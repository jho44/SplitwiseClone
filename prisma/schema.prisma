// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  createdAt       DateTime  @default(now()) @map(name: "created_at")
  updatedAt       DateTime  @updatedAt @map(name: "updated_at")
  friends         User[]    @relation("friends")
  friendOf        User[]    @relation("friends")
  blocked         User[]    @relation("blocked")
  blockedBy       User[]    @relation("blocked")
  groups          Group[]
  createdExpenses Expense[]

  @@map(name: "users")
}

model Group {
  id         String    @id @default(cuid())
  name       String
  members    User[]
  whiteboard String?
  expenses   Expense[]
}

model Expense {
  id          String    @id @default(cuid())
  borrowerId  String    @map(name: "borrower_id")
  lenderId    String    @map(name: "lender_id")
  amtOwed     Json
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  expenseDate DateTime? @map(name: "expense_date")
  notes       String?

  creator   User   @relation(fields: [creatorId], references: [id])
  creatorId String @unique

  description Json

  group   Group?  @relation(fields: [groupId], references: [id])
  groupId String? @map(name: "group_id")

  @@map(name: "expenses")
}
